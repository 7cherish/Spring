<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- #5. appServlet관련 설정 -->
	
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- mvc 관련한 어노테이션을 처리해준다. -->
	<!-- 
		annotation-driven 요소는 Spring Web MVC를 하기 위해 설정해야 하는 값들을 자동으로 로딩해준다. 
		해당 설정 어노테이션은 @RequestMapping, @ModelAttribute, @SessionAttribute, @RequestParam 등이 있다. 
	-->
	<annotation-driven />
	
	<!-- 이미지, css등 자원 경로를 안내함. (매핑시켜줌) -->
	<!-- 
	resources란?
	이미지, js 및 css 파일과 같은 정적 리소스를 캐시 헤더로 서비스하기 위한 핸들러 구성 
	웹 브라우저에서 효율적인 로딩을 위해 최적화. 리소스가 모든 경로에서 서비스되도록 허용 
	스프링의 리소스 취급을 통해 연결 가능.
	
	속성
	- mapping
	이 처리기의 리소스를 제공하는 데 사용할 현재 Servlet 컨텍스트 내의 URL 매핑 패턴, 
	예: "/리소스/**"
	
	-location
	스프링 리소스 패턴으로 지정된 정적 컨텐츠를 처리할 리소스 위치. 각각 
	위치는 유효한 디렉토리를 가리켜야 한다. 여러 위치를 쉼표로 구분된 목록으로 지정할 수 있으며, 
	지정된 순서대로 지정된 리소스에 대해 위치를 점검하십시오. 예를 들어 "/, 
	classpath:/META-INF/public-web-resources/"는 웹 앱에서 모두 리소스를 서비스할 수 있도록 한다. 
	/META-INF/public-web-resources/ 디렉토리를 포함하는 classpath의 모든 JAR에서 
	웹 애플리케이션 루트의 리소스 우선 순위 URL 기반 리소스(예: 파일, HTTP URL 등)의 경우 
	속성이 URL과 연관된 문자 집합을 나타내는 특수 접두사를 지원하므로 
	여기에 추가된 것은 "[Charset=Windows-31J]http://example.org/path"과 같이 올바르게 인코딩될 수 있다.
	 -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- InternalResourceViewResolver : View단을 처리한다. -->
	<!-- class는 클래스가 어디 위치해있는지만 알려준다. (매핑) -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 스프링컨테이너에 의해 서버 켜질 때 자동 bean 등록 -->
	<!-- 
	@Component 어노테이션이 붙은 클래스를 자동으로 검색해서 bean으로 등록한다.
	빈의 이름은 소문자로 시작하는 클래스명이다.
	빈으로 등록되지 않은 클래스는 스프링컨테이너에 의해 사용불가.
	Framework에서 중요하다. -->
	<context:component-scan base-package="com.kh.spring" />
	
	
	
</beans:beans>
