<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	<!-- #9.2 aop관련태그 작성 -->
	<!-- ========== 선언적 aop 시작 ========== -->
	<!-- LoggerAspect 빈등록 (서버구동시 자동 등록) -->
<!-- 	<bean id="loggerAspect" class="com.kh.spring.common.aop.LoggerAspect" /> 
	<aop:config>
		ref는 bean의 id값
		id값을 지정하지 않으면 에러발생
		<aop:aspect id="loggerAspect" ref="loggerAspect">
			expression : joinPoint 선점 룰
			이 패키지 밑에 있는 모든 클래스와 메소드, 파라미터는 있거나 없거나 모두 다(모든 리턴타입)
			<aop:pointcut expression="execution(* com.kh.spring.memo..*(..))" id="pointCutForAll"/>
			
			컨트롤러에 메소드를 정했음
			<aop:pointcut expression="execution(* com.kh.spring.memo..MemoController.memo(..))" id="pointCutForAll"/>
			
			클래스에 실제로 있는 메소드를 적는다
			pointcut-ref 는 pointcut의 id값
			<aop:around method="loggerAdvice" pointcut-ref="pointCutForAll"/>
		</aop:aspect>
	</aop:config> -->
	<!-- ========== 선언적 aop 끝 ========== -->
	
	
	<!-- ========== 프로그래밍적 aop 시작(@ 사용) ========== -->
	<aop:aspectj-autoproxy/>
	<!-- ========== 프로그래밍적 aop 끝(@ 사용) ========== -->
	
	<!-- #11.2 트랜잭션처리를 위해서 특정클래스/특정메소드를 aop pointcut으로 등록함 (어노테이션 방식)-->
<!-- 	<aop:config>
	  <aop:pointcut id="serviceMethod" expression="execution(* com.kh.spring..*ServiceImpl.*(..))" />
    </aop:config> -->

</beans>
